# This is a basic workflow to help you get started with Actions

name: Compile Kernel from Source

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/compile_from_source.yml'
      - 'vendor_ramdisk00'
      - 'flash-all.bat'
      - 'flash-all.sh'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      FACTORY_IMAGE: raven-ap4a.250205.002
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4.1.7
        
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install repo

      - name: Free up space
        uses: jlumbroso/free-disk-space@main

      # Runs a set of commands using the runners shell
      - name: Sync kernel repo
        run: |
          mkdir android-kernel
          cd android-kernel
          repo init -u https://android.googlesource.com/kernel/manifest -b android14-gs-pixel-6.1
          repo sync -c --no-tags

      - name: Update vendor ramdisk (through curl)
        if: true
        run: |
          curl "https://dl.google.com/dl/android/aosp/raven-ap4a.250205.002-factory-d8162d11.zip" > factory.zip
          unzip factory.zip
          cd ${FACTORY_IMAGE}
          unzip image-${FACTORY_IMAGE}.zip vendor_boot.img
          mv vendor_boot.img ..
          cd ..
          ls
          pwd
          android-kernel/tools/mkbootimg/unpack_bootimg.py --boot_img vendor_boot.img --out vendor_boot_out
          cp vendor_boot_out/vendor-ramdisk-by-name/ramdisk_ android-kernel/prebuilts/boot-artifacts/ramdisks/vendor_ramdisk-oriole.img

      - name: Update vendor ramdisk (locally)
        if: false
        run: |
          cp vendor_ramdisk00 android-kernel/prebuilts/boot-artifacts/ramdisks/vendor_ramdisk-oriole.img

      - name: Compile Kernel
        run: |
          cd android-kernel
          tools/bazel run --config=fast --config=stamp //private/google-modules/soc/gs:slider_dist

      - name: Pack images to upload
        run: |
          mkdir images
          cp android-kernel/out/slider/dist/boot.img images
          cp android-kernel/out/slider/dist/dtbo.img images
          cp android-kernel/out/slider/dist/vendor_boot.img images
          cp android-kernel/out/slider/dist/vendor_dlkm.img images
          cp flash-all.sh images
          cp flash-all.bat images
          zip images.zip images -r

      - name: Upload files
        uses: actions/upload-artifact@v4.3.3
        with:
          name: the-images
          path: images.zip
