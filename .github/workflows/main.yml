# This is a basic workflow to help you get started with Actions

name: Compile Kernel

# Controls when the workflow will run
on:
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4.1.7
        
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install repo zip

      - name: Free up space
        run: | 
          rm -rf /opt/hostedtoolcache

      # Runs a set of commands using the runners shell
      - name: Sync kernel repo
        run: |
          mkdir android-kernel
          cd android-kernel
          repo init -u https://android.googlesource.com/kernel/manifest -b android14-gs-pixel-6.1
          repo sync -c --no-tags

      - name: Update vendor ramdisk (through curl)
        if: false
        run: |
          cd ..
          curl -O "https://dl.google.com/dl/android/aosp/raven-ap1a.240505.004-factory-9d783215.zip"
          unzip raven-ap1a.240505.004-factory-9d783215.zip
          cd raven-ap1a.240505.004
          unzip image-raven-ap1a.240505.004.zip vendor_boot.img
          mv vendor_boot.img ..
          cd ..
          cd android-kernel/tools/mkbootimg
          cp vendor_boot_out/vendor-ramdisk-by-name/ramdisk_ \ android-kernel/prebuilts/boot-artifacts/ramdisks/vendor_ramdisk-oriole.img

      - name: Update vendor ramdisk (locally)
        if: true
        run: |
          cp vendor_ramdisk00 android-kernel/prebuilts/boot-artifacts/ramdisks/vendor_ramdisk-oriole.img

      - name: Compile Kernel
        run: |
          cd android-kernel
          tools/bazel run --config=fast --config=stamp //private/google-modules/soc/gs:slider_dist
          cd out
          ls
          mkdir to-upload
          cp slider/dist/boot.img to-upload
          cp slider/dist/dtbo.img to-upload
          cp slider/dist/vendor_boot.img to-upload
          cp slider/dist/vendor_dlkm.img to-upload
          ls
          zip the-images to-upload -r

      - name: Pack images to upload
        if: false
        run: |
          mkdir to-upload
          cp slider/dist/boot.img to-upload
          cp slider/dist/dtbo.img to-upload
          cp slider/dist/vendor_boot.img to-upload
          cp slider/dist/vendor_dlkm.img to-upload
          zip the-images to-upload -r

      - name: Upload images
        uses: actions/upload-artifact@v4.3.3
        with:
          name: Images
          path: the-images.zip
